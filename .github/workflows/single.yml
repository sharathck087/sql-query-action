on: [push]
env:
  DB_TYPE: oracle 

jobs:
  test-everywhere:
    name: Test Action
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        if: ${{ env.DB_TYPE == 'sql' }}
      - name: Run the action
        if: ${{ env.DB_TYPE == 'sql' }}
        #uses: sharathck087/sqlserver-github-action@v1.0.1
        uses: potatoqualitee/mssqlsuite@v1
        with:
          install: sqlengine, sqlclient

      #- name: Run sqlclient
      #- uses: sharathck087/sqlserver-github-action@v1.0.1 
        #with:
          #install: sqlclient 

      - name: Run sqlclient
        if: ${{ env.DB_TYPE == 'sql' }}
        run: sqlcmd -S ${{secrets.SERVER}} -U ${{secrets.USERNAME}} -P ${{secrets.PASSWORD}} -i /${GITHUB_WORKSPACE}/sql/*.sql
        #run: sqlcmd -S localhost -U sa -P dbatools.I0 -i /${GITHUB_WORKSPACE}/sql/test.sql
        # run: sqlcmd -S localhost -U sa -P dbatools.I0 -d tempdb -Q "SELECT @@version;"

  build:
    runs-on: ubuntu-latest
    steps:
      # You must setup a Oracle db client which allows you get access to the server
      - name: Checkout client
        # Need to checout first , then you can use your repo in following actions.
        uses: actions/checkout@v2
        if: ${{ env.DB_TYPE == 'oracle' }}
        with:
          repository: GoodManWEN/oracle-client-action
      - name: Setup Oracledb client
        if: ${{ env.DB_TYPE == 'oracle' }}
        uses: GoodManWEN/oracle-client-action@main
      
      # Server side
      - name: Setup Oracledb 11gR2 server
        if: ${{ env.DB_TYPE == 'oracle' }}
        uses: GoodManWENNumber2/oracle-11g-server-action@v1.0
        with:
          host port: 1521          
          oracle version: '1.0.0'
          
      - name: Install dependencies
        if: ${{ env.DB_TYPE == 'oracle' }}
        run: |  # sleep to make sure Oracle server is fully loaded
          sleep 60            
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-asyncio cx-Oracle-async
      - name: Test with pytest
        if: ${{ env.DB_TYPE == 'oracle' }}
        run: |
          sleep 30
          pytest
